package sg.edu.ntu.eee.aedlocator;

import android.app.AlertDialog;

import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffXfermode;
import android.graphics.Rect;
import android.graphics.RectF;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.widget.FloatingActionButton;
import android.util.Log;
import android.view.View;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.common.api.Status;
import com.google.android.gms.location.places.Place;
import com.google.android.gms.location.places.ui.PlaceAutocompleteFragment;
import com.google.android.gms.location.places.ui.PlaceSelectionListener;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.storage.FileDownloadTask;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;


public class MainActivity extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener {
    // activity code for (page) navigation
    public static final int USER_LOGIN_REQUEST = 1;
    public static final int NAV_REQUEST = 2;

    // layout (view) elements
    private MapFragment mapFragment;

    private NavigationView navigationView;
    private DrawerLayout drawer;
    private View navHeaderView;
    private ImageView userAvatarView;
    private TextView usernameView, userEmailView;

    // variable: Firebase
    private FirebaseAuth mAuth;
    private FirebaseUser mUser;
    private StorageReference mStorageRef;
    private FirebaseFirestore db = FirebaseFirestore.getInstance(); // used in uploading data, e.g. AED entries

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // set Firebase
        mAuth = FirebaseAuth.getInstance();
        mStorageRef = FirebaseStorage.getInstance().getReference();

        // set action bar
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        // set floating action button(FAB)
        FloatingActionButton fab_new_aed = findViewById(R.id.btn_new_aed);
        fab_new_aed.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent fabIntent = new Intent(getApplicationContext(), RewardActivity.class);
                fabIntent = fabIntent.putExtra("earned", -1);
                startActivity(fabIntent);

//                // for data upload: AED entries, to Firestore
//                // *the code is auto-generated by preprocessing gov.sg AED dataset using Python
//                HashMap<String, String> aed = new HashMap<>();
//                aed.put("AED ID", "639798-004");
//                aed.put("Operating Hours", "Mon - Fri (0830 - 2130) Sat (0830 - 1700)");
//                aed.put("ADDRESSBLOCKHOUSENUMBER", "50");
//                aed.put("ADDRESSSTREETNAME", "Nanyang Ave");
//                aed.put("ADDRESSBUILDINGNAME", "Nanyang Technological University");
//                aed.put("ADDRESSUNITNUMBER", "");
//                aed.put("ADDRESSPOSTALCODE", "639798");
//                aed.put("NAME", "Level B5 Blk S3.2 (Chinese Library)");
//                aed.put("DESCRIPTION", "B5");
//                aed.put("Latitude", "1.343768");
//                aed.put("Longitude", "103.682307");
//                aed.put("X Coordinate", "11194.04053");
//                aed.put("Y Coordinate", "36213.07377");
//                aed.put("INC_CRC", "354E240D75A9666A");
//                aed.put("FMEL_UPD_D", "7/13/2017 12:05:29 PM");
//                aed.put("X_ADDR", "11194.0405");
//                aed.put("Y_ADDR", "36213.0737");
//                aed.put("status", "reported");
//                db.collection("aed_init").document("639798-004")
//                        .set(aed)
//                        .addOnSuccessListener(new OnSuccessListener<Void>() {
//                            @Override
//                            public void onSuccess(Void aVoid) {
//                                Log.d("TAG", "DocumentSnapshot successfully written!");}})
//                        .addOnFailureListener(new OnFailureListener() {
//                            @Override
//                            public void onFailure(@NonNull Exception e) {Log.w("TAG", "Error writing document", e);}});

                // for debug only
                Toast.makeText(getApplicationContext(), "done!", Toast.LENGTH_SHORT).show();
            }

        });

        // set drawer
        drawer = findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();

        // set navigation view
        navigationView = findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);

        navHeaderView = navigationView.getHeaderView(0);

        // set user profile
        userAvatarView = navHeaderView.findViewById(R.id.nav_avatar);
        usernameView = navHeaderView.findViewById(R.id.nav_username);
        userEmailView = navHeaderView.findViewById(R.id.nav_email);

        // click listener: login/logout(upon confirmation)
        usernameView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (mAuth.getCurrentUser() == null) {
                    newLogin();
                } else {
                    new AlertDialog.Builder(MainActivity.this)
                            .setTitle("Log out")
                            .setMessage("Do you want to log out?")
                            .setIcon(android.R.drawable.ic_dialog_alert)
                            .setPositiveButton(
                                    android.R.string.yes,
                                    new DialogInterface.OnClickListener() {
                                        public void onClick(DialogInterface dialog, int which) {
                                            resetUserProfile();
                                            Toast.makeText(MainActivity.this, "Logged out successfully. See you!:)", Toast.LENGTH_SHORT).show();
                                            mAuth.signOut();
                                            newLogin();
                                        }})
                            .setNegativeButton(android.R.string.no, null).show();
                }
            }
        });

        // set google map
        mapFragment = new MapFragment();
        android.support.v4.app.FragmentManager manager = getSupportFragmentManager();
        manager.beginTransaction().replace(R.id.mainLayout, mapFragment).commit();

        PlaceAutocompleteFragment autocompleteFragment = (PlaceAutocompleteFragment)
                getFragmentManager().findFragmentById(R.id.place_autocomplete_fragment);

        autocompleteFragment.setOnPlaceSelectedListener(new PlaceSelectionListener() {
            @Override
            public void onPlaceSelected(Place place) {
                mapFragment.setLocationOnSearch(place, getApplicationContext());
            }

            @Override
            public void onError(Status status) {
                // TODO: handle the error elegantly
                Toast.makeText(getApplicationContext(), "Error place selection", Toast.LENGTH_SHORT).show();
            }
        });

        // reflect user status
        if (mAuth.getCurrentUser() == null) {
            newLogin();
        } else {
            mUser = mAuth.getCurrentUser();
            String username = mUser.getDisplayName();
            Toast.makeText(getApplicationContext(), "Welcome back!", Toast.LENGTH_SHORT).show();
            updateUserInfo(username);
        }

        // for debug only
        Toast.makeText(getApplicationContext(), "yo! test ver refreshed!", Toast.LENGTH_SHORT).show();
    }

    /*
     * handle back_pressed from drawer
     */
    @Override
    public void onBackPressed() {
        DrawerLayout drawer = findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    /*
     * inflate menu: this adds items to the action bar if it is present
     */
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main, menu);

        return true;
    }

    /*
     * handle action bar item clicks
     * NOTE: clicks on the Home/Up button are handled automatically, so long
     *       as you specify a parent activity in AndroidManifest.xml.
     */
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();

        // TODO: build setting menu etc.

        if (id == R.id.home_menu1) {
            // for debug only
            new AlertDialog.Builder(this)
                    .setTitle("About")
                    .setMessage("NTU IDR-URECA Project\n(IRB REFERENCE NO: IRB-2018-03-026 EXPENDITED)\n\nSupported by SCDF & Data.gov.sg\n\nVersion 1.5.6\nTESTING ONLY")
                    .setNeutralButton(android.R.string.ok, null)
                    .show();
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    /*
     * handle navigation view item clicks
     */
    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.nav_map) {
            android.support.v4.app.FragmentManager manager = getSupportFragmentManager();
            manager.beginTransaction().replace(R.id.mainLayout, mapFragment).commit();
        } else {
            Intent navIntent;
            switch (id) {
                case R.id.nav_inbox:
                    navIntent = new Intent(this, InboxActivity.class);
                    break;
                case R.id.nav_my:
                    navIntent = new Intent(this, UserProfileActivity.class);
                    break;
                case R.id.nav_daily:
                    navIntent = new Intent(this, MyContributionActivity.class);
                    break;
                case R.id.nav_report:
                    navIntent = new Intent(this, AEDReportActivity.class);
                    break;
                case R.id.nav_share:
                    // prepare text and share via sms
                    Intent shareIntent = new Intent(Intent.ACTION_SEND);
                    shareIntent.setType("text/plain");
                    shareIntent.putExtra(Intent.EXTRA_SUBJECT, R.string.sms_subject);
                    shareIntent.putExtra(Intent.EXTRA_TEXT, R.string.sms_text);

                    navIntent = Intent.createChooser(shareIntent, "Share via");
                    break;
                default:
                    navIntent = new Intent(this, MainActivity.class); // TODO: safe?
            }
            startActivityForResult(navIntent, NAV_REQUEST);
        }

        // close drawer
        DrawerLayout drawer = findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);

        return true;
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data)
    {
        if (data!=null && data.getStringExtra("displayName")!=null) {
            String username = data.getStringExtra("displayName");
            updateUserInfo(username);
        } else if (mUser!=null) {
            updateUserInfo(mUser.getDisplayName());
        } else {
            resetUserProfile();
        }
    }

    /*
     * start login activity
     */
    private void newLogin() {
        Intent fabIntent = new Intent(getApplicationContext(), UserLoginActivity.class);
        startActivityForResult(fabIntent, USER_LOGIN_REQUEST);
    }

    /*
     * reset user profile
     */
    private void resetUserProfile() {
        userAvatarView.setImageResource(R.mipmap.ic_launcher_round);
        usernameView.setText(R.string.no_user_name);
        userEmailView.setText(R.string.no_user_email);
    }

    /*
     * update user profile with information from Firebase
     */
    private void updateUserInfo(String username){
        if (mAuth.getCurrentUser() != null) {
            mUser = mAuth.getCurrentUser();

            StorageReference mRef = mStorageRef.child("images/user/"
                    + mUser.getUid()
                    + ".jpg");
            try {
                final File localFile = File.createTempFile("Images", "bmp");
                mRef.getFile(localFile).addOnSuccessListener(new OnSuccessListener< FileDownloadTask.TaskSnapshot >() {
                    @Override
                    public void onSuccess(FileDownloadTask.TaskSnapshot taskSnapshot) {
                        Bitmap bitmap = BitmapFactory.decodeFile(localFile.getAbsolutePath());
                        userAvatarView.setImageBitmap(scaleRoundBitmap(bitmap));
                    }
                }).addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                    }
                });
            } catch (IOException e) {
                e.printStackTrace();
            }

            if (mUser.getDisplayName()==null) {
                usernameView.setText(R.string.main_username_logout);
            } else {
                String text = mUser.getDisplayName() + " " + R.string.main_username_logout;
                usernameView.setText(text);
            }
            userEmailView.setText(mUser.getEmail());
        }
    }

    /*
     * process bitmap (user avatar): scale, make round corner
     */
    private Bitmap scaleRoundBitmap(Bitmap raw) {
        final float round = 35;
        final int rawSize = 70;
        raw = Bitmap.createScaledBitmap(raw, rawSize, rawSize, false);
        Bitmap dstBmp = Bitmap.createBitmap(rawSize, rawSize, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(dstBmp);
        canvas.drawARGB(0, 0, 0, 0);

        final Paint paint = new Paint();
        paint.setAntiAlias(true);
        paint.setColor(Color.parseColor("#000000"));

        final Rect rect = new Rect(0, 0, rawSize, rawSize);
        final RectF rectF = new RectF(rect);

        canvas.drawRoundRect(rectF, round, round, paint);

        paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));
        canvas.drawBitmap(raw, rect, rect, paint);

        return dstBmp;
    }

}
